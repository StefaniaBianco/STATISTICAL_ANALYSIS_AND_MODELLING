getwd()
df <- read.csv("C:/Users/Utente/Desktop/STATISTICAL ANALYSIS AND MODELLING/exam/project/20221213_QDV2022_001 (4).csv", dec=".", sep=",", stringsAsFactors = T)
df

Piste_ciclabili<-df[df$INDICATORE=="Piste ciclabili", c(1,3,5)]
Piste_ciclabili<-Piste_ciclabili[order(Piste_ciclabili$CODICE.PROVINCIA.ISTAT..STORICO.),]

Tasso_motorizzazione<-df[df$INDICATORE=="Tasso di motorizzazione",c(1,3,5)]
Tasso_motorizzazione<-Tasso_motorizzazione[order(Tasso_motorizzazione$CODICE.PROVINCIA.ISTAT..STORICO.),]

Verde_urbano<-df[df$INDICATORE=="Verde urbano fruibile",c(1,3,5)]
Verde_urbano<-Verde_urbano[order(Verde_urbano$CODICE.PROVINCIA.ISTAT..STORICO.),]

Qualità_aria<-df[df$INDICATORE=="Qualità dell'aria",c(1,3,5)]
Qualità_aria<-Qualità_aria[order(Qualità_aria$CODICE.PROVINCIA.ISTAT..STORICO.),]

Isole_pedonali <-df[df$INDICATORE=="Isole pedonali ",c(1,3,5)]
Isole_pedonali<-Isole_pedonali[order(Isole_pedonali$CODICE.PROVINCIA.ISTAT..STORICO.),]

Ecosistema_urbano <- df[df$INDICATORE=="Ecosistema urbano ", c(1,3,5)]
Ecosistema_urbano <- Ecosistema_urbano[order(Ecosistema_urbano$CODICE.PROVINCIA.ISTAT..STORICO.),]


newdf<-data.frame(Piste_ciclabili[,c(1,2,3)], Tasso_motorizzazione[,3], 
                  Verde_urbano[,3], Qualità_aria[,3], 
                  Isole_pedonali[,3], Ecosistema_urbano[,3])

newdf

names(newdf) <- c("Province", "Province code", "Cycling lanes", "Motorization rate", 
                  "Urban green", "Air quality", 
                  "Pedestrian areas", "Urban ecosystem")
names(newdf)


#separazione dell'italia https://www.tuttitalia.it/statistiche/nord-centro-mezzogiorno-italia/

Nord <- newdf[c(1:40, 93, 96:99, 103:104),]
Nord

Centro <- newdf[c(41:60, 100, 105),]
Centro

Mezzogiorno <- newdf[c(61:92, 94:95, 101:102, 106:107),]
Mezzogiorno

nrow(Nord)
nrow(Centro)
nrow(Mezzogiorno)

nrow(Nord)+nrow(Centro)+nrow(Mezzogiorno)

#mean of variable "cycling lanes"
mean_cycling_lanes<-mean(newdf$`Cycling lanes`)
mean_cycling_lanes_nord<-mean(Nord$`Cycling lanes`)
mean_cycling_lanes_centro<-mean(Centro$`Cycling lanes`)
mean_cycling_lanes_mezzogiorno<-mean(Mezzogiorno$`Cycling lanes`)
mean_cycling_lanes_values<-c(9.67, 14.90, 7.10, 4.69)

#variance of variable "cycling lanes"// var=M(x^2)-M(x)^2
variance_cycling_lanes<-mean(newdf$`Cycling lanes`^2)-(mean_cycling_lanes)^2
variance_cycling_lanes_nord<-mean(Nord$`Cycling lanes`^2)-(mean_cycling_lanes_nord)^2
variance_cycling_lanes_centro<-mean(Centro$`Cycling lanes`^2)-(mean_cycling_lanes_centro)^2
variance_cycling_lanes_mezzogiorno<-mean(Mezzogiorno$`Cycling lanes`^2)-(mean_cycling_lanes_mezzogiorno)^2

#standard deviation of variable "cycling lanes" // sd=sqrt(var)
sd_cycling_lanes<-sqrt(variance_cycling_lanes)
sd_cycling_lanes_nord<-sqrt(variance_cycling_lanes_nord)
sd_cycling_lanes_centro<-sqrt(variance_cycling_lanes_centro)
sd_cycling_lanes_mezzogiorno<-sqrt(variance_cycling_lanes_mezzogiorno)

#coefficient of variation of variable "cycling lanes" // cv=sd/mean
cv_cycling_lanes<-sd_cycling_lanes/mean_cycling_lanes
cv_cycling_lanes_nord<-sd_cycling_lanes_nord/mean_cycling_lanes_nord
cv_cycling_lanes_centro<-sd_cycling_lanes_centro/mean_cycling_lanes_centro
cv_cycling_lanes_mezzogiorno<-sd_cycling_lanes_mezzogiorno/mean_cycling_lanes_mezzogiorno

#mean of variable "motorization rate"
mean_motorization_rate<-mean(newdf$`Motorization rate`)
mean_motorization_rate_nord<-mean(Nord$`Motorization rate`)
mean_motorization_rate_centro<-mean(Centro$`Motorization rate`)
mean_motorization_rate_mezzogiorno<-mean(Mezzogiorno$`Motorization rate`)
mean_motorization_rate_values<-c(65.54, 62.47, 67.40, 68.26)

#variance of variable "Motorization rate"// var=M(x^2)-M(x)^2
variance_motorization_rate<-mean(newdf$`Motorization rate`^2)-(mean_motorization_rate)^2
variance_motorization_rate_nord<-mean(Nord$`Motorization rate`^2)-(mean_motorization_rate_nord)^2
variance_motorization_rate_centro<-mean(Centro$`Motorization rate`^2)-(mean_motorization_rate_centro)^2
variance_motorization_rate_mezzogiorno<-mean(Mezzogiorno$`Motorization rate`^2)-(mean_motorization_rate_mezzogiorno)^2

#standard deviation of variable "Motorization rate" // sd=sqrt(var)
sd_motorization_rate<-sqrt(variance_motorization_rate)
sd_motorization_rate_nord<-sqrt(variance_motorization_rate_nord)
sd_motorization_rate_centro<-sqrt(variance_motorization_rate_centro)
sd_motorization_rate_mezzogiorno<-sqrt(variance_motorization_rate_mezzogiorno)

#coefficient of variation of variable "Motorization rate" // cv=sd/mean
cv_motorization_rate<-sd_motorization_rate/mean_motorization_rate
cv_motorization_rate_nord<-sd_motorization_rate/mean_motorization_rate_nord
cv_motorization_rate_centro<-sd_motorization_rate/mean_motorization_rate_centro
cv_motorization_rate_mezzogiorno<-sd_motorization_rate/mean_motorization_rate_mezzogiorno

#barplot with the mean of variable "cycling lanes"
bp_mean_cycling_lanes<-barplot(mean_cycling_lanes_values, 
                               names.arg = c("Italy", "North", "Centre", "South"), 
                               col="GREEN", ylab="Equivalent metres every 100 inhabitant")
title("Barplot of cycling lanes ")
abline(h=9.67)
abline(h=0)
dev.off()

#barplot with the mean of variable "motorization rate"
bp_mean_motorization_rate<-barplot(mean_motorization_rate_values, 
                            names.arg = c("Italy", "North", "Centre", "South"), 
                            col="GREEN", ylab="Number of cars per 100 inhabitant")
                            title("Barplot of motorization rate means")
                            abline(h=65.54)
                            abline(h=0)


#correlation between air quality (PM10, NO2 and O3 in the air) and urban green (Squared metres per inhabitant)                       
plot(x=newdf$`Urban green`, y=newdf$`Air quality`,    
     xlab = "Urban Green", ylab="Air quality", 
     main="Scatterplot of Urban Green and Air quality", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
abline(model_italy)
cor(newdf$`Urban green`, newdf$`Air quality`) #cor=0.13    
cor.test(newdf$`Urban green`, newdf$`Air quality`) #p-value=0.17-->no evidence against H0=true correlation is equal to 0
model_italy <- lm(newdf$`Urban green`~ newdf$`Air quality`)
summary(model_italy)
dev.off()

plot(x=Nord$`Urban green`, y=Nord$`Air quality`, xlab = "Urban Green", ylab="Air quality", 
     main="NORD // Scatterplot of Urban Green and Air quality", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
cor(x=Nord$`Urban green`, y=Nord$`Air quality`)  
cor.test(x=Nord$`Urban green`, y=Nord$`Air quality`) 
model_nord <- lm(Nord$`Urban green`~ Nord$`Air quality`)
summary(model_nord)

plot(x=Centro$`Urban green`, y=Centro$`Air quality`,
     xlab = "Urban Green", ylab="Air quality", 
     main="CENTRE // Scatterplot of Urban Green and Air quality", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
cor(x=Centro$`Urban green`, y=Centro$`Air quality`)  
cor.test(x=Centro$`Urban green`, y=Centro$`Air quality`)
model_centro <- lm(Centro$`Urban green`~ Centro$`Air quality`)
summary(model_centro)

plot(x=Mezzogiorno$`Urban green`, y=Mezzogiorno$`Air quality`, 
     xlab = "Urban Green", ylab="Air quality", 
     main="Scatterplot of Urban Green and Air quality", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
cor(x=Mezzogiorno$`Urban green`, y=Mezzogiorno$`Air quality`) 
cor.test(x=Mezzogiorno$`Urban green`, y=Mezzogiorno$`Air quality`) #P-value=0.005-->strong evidence against H0, so they are correlated
model_mezzogiorno <- lm(Mezzogiorno$`Urban green`~ Mezzogiorno$`Air quality`)
summary(model_mezzogiorno)
abline(model_mezzogiorno)
dev.off()

#correlation between pedestrian areas and motorization rate
#Pedestrian areas=squared metres per inhabitant, motorization rate=cars every 100 inhabitants
plot(x=newdf$`Pedestrian areas`, y=newdf$`Motorization rate`, xlab = "Pedestrian areas", ylab="Motorization rate", 
     main="Scatterplot of Pedestrian areas and Motorization rate", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
#DOES NOT WORK abline(model_italy)
cor(x=newdf$`Pedestrian areas`, y=newdf$`Motorization rate`)
cor.test(x=newdf$`Pedestrian areas`, y=newdf$`Motorization rate`) #p-value=0.07, they might be correlated
model_italy_correlation<-lm (newdf$`Pedestrian areas`~newdf$`Motorization rate`)
summary(model_italy_correlation)
dev.off()

plot(x=Nord$`Pedestrian areas`, y=Nord$`Motorization rate`, xlab = "Pedestrian areas", ylab="Motorization rate", 
     main="NORD // Scatterplot of Pedestrian areas and Motorization rate", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
  cor(x=Nord$`Pedestrian areas`, y=Nord$`Motorization rate`)  
cor.test(x=Nord$`Pedestrian areas`, y=Nord$`Motorization rate`) 
model_nord_correlation <- lm(Nord$`Pedestrian areas`~ Nord$`Motorization rate`)
summary(model_nord_correlation)

plot(x=Centro$`Pedestrian areas`, y=Centro$`Motorization rate`, xlab = "Pedestrian areas", ylab="Motorization rate", 
     main="CENTRO // Scatterplot of Pedestrian areas and Motorization rate", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
cor(x=Centro$`Pedestrian areas`, y=Centro$`Motorization rate`)  
cor.test(x=Centro$`Pedestrian areas`, y=Centro$`Motorization rate`) 
model_centro_correlation <- lm(Centro$`Pedestrian areas`~ Centro$`Motorization rate`)
summary(model_centro_correlation)

plot(x=Mezzogiorno$`Pedestrian areas`, y=Mezzogiorno$`Motorization rate`, xlab = "Pedestrian areas", ylab="Motorization rate", 
     main="Mezzogiorno // Scatterplot of Pedestrian areas and Motorization rate", 
     cex.main=1.4, font.main=2, 
     col.main="orange")
cor(x=Mezzogiorno$`Pedestrian areas`, y=Mezzogiorno$`Motorization rate`)  
cor.test(x=Mezzogiorno$`Pedestrian areas`, y=Mezzogiorno$`Motorization rate`) 
model_mezzogiorno_correlation <- lm(Mezzogiorno$`Pedestrian areas`~ Mezzogiorno$`Motorization rate`)
summary(model_mezzogiorno_correlation)


#Grouped frequency distribution of the variable cycling lanes
range(newdf$`Cycling lanes`)

cycling_lanes_cat<-cut(newdf$`Cycling lanes`, breaks = c(0, 10, 20, 30, 40, 50), labels = c("0-10", "10-20", "20-30","30-40","40-50"))
table(cycling_lanes_cat)

cycling_lanes_cat_nord<-cut(Nord$`Cycling lanes`, breaks =c(0, 10, 20, 30, 40, 50), labels = c("0-10", "10-20", "20-30","30-40","40-50"))
table(cycling_lanes_cat_nord)

cycling_lanes_cat_centro<-cut(Centro$`Cycling lanes`, breaks = c(0, 10, 20, 30, 40, 50), labels = c("0-10", "10-20", "20-30","30-40","40-50"))
table(cycling_lanes_cat_centro)

cycling_lanes_cat_sud<-cut(Mezzogiorno$`Cycling lanes`, breaks = c(0, 10, 20, 30, 40, 50), labels = c("0-10", "10-20", "20-30","30-40","40-50"))
table(cycling_lanes_cat_sud)

library(RColorBrewer)
coul <- brewer.pal(5, "Set2")

par(mfrow=c(2,2))
barplot(table(cycling_lanes_cat), xlab="m^2 per inhabitant", ylab="Number of cycling lanes", main="Cycling lanes Italy", col=coul, border="red")
barplot(table(cycling_lanes_cat_nord), xlab="m^2 per inhabitant", ylab="Number of cycling lanes",main="Cycling lanes Nord", col=coul, border="red")
barplot(table(cycling_lanes_cat_centro), xlab="m^2 per inhabitant", ylab="Number of cycling lanes", main="Cycling lanes Centre", col=coul, border="red")
barplot(table(cycling_lanes_cat_sud), xlab="m^2 per inhabitant", ylab="Number of cycling lanes", main="Cycling lanes South", col=coul, border="red")
dev.off()

hist(newdf$`Cycling lanes`, freq=F, xlab="m^2 per inhabitant", ylab="Number of cycling lanes", main="Cycling lanes Italy", col=coul, border="red")
lines(density(newdf$`Cycling lanes`), lwd=2) 
abline(v=mean(newdf$`Cycling lanes`), col='red', lwd=3)
curve(dnorm(x, mean=mean(newdf$`Cycling lanes`), 
            sd=sd(newdf$`Cycling lanes`)), 
      add=T, col="orange", lwd=2)
shapiro.test(newdf$`Cycling lanes`) #data do not come from a normal distribution, they are skewed


#t test between population means for cycling lanes
t.test(x=Nord$`Cycling lanes` , y = Mezzogiorno$`Cycling lanes`, alternative = "two.sided",
       mu=0, var.equal=T, conf.level = 0.99)
t.test(x=Nord$`Cycling lanes`, y = Centro$`Cycling lanes`, alternative = "two.sided",
       mu=0, var.equal=T, conf.level = 0.99)
t.test(x=Mezzogiorno$`Cycling lanes`, y = Centro$`Cycling lanes`, alternative = "two.sided",
       mu=0, var.equal=T, conf.level = 0.99)


t.test(x=Nord$`Motorization rate` , y = Mezzogiorno$`Motorization rate`, alternative = "two.sided",
       mu=0, var.equal=T, conf.level = 0.99)
t.test(x=Nord$`Motorization rate` , y = Centro$`Motorization rate`, alternative = "two.sided",
       mu=0, var.equal=T, conf.level = 0.99)
t.test(x=Mezzogiorno$`Motorization rate` , y = Centro$`Motorization rate`, alternative = "two.sided",
       mu=0, var.equal=T, conf.level = 0.99)

